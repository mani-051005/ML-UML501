import numpy as np
arr=np.array([1,2,3,4,5])
reversed_arr = arr[::-1]
print("Original array:",arr)
print("Reversed array:",reversed_arr)

array1=np.array([[1,2,3],[2,4,5],[1,2,3]])
flattened1=array1.flatten()
print("flattened using flatten():",flattened1)

arr1=np.array([[1,2],[3,4]])
arr2=np.array([[1,2],[3,4]])
print(arr1==arr2)
print(np.array_equal(arr1,arr2))

x=np.array([1,2,3,4,5,1,2,1,1,1])
value,counts=np.unique(x,return_counts=True)
most_freq_value= value[np.argmax(counts)]
indices=np.where(x == most_freq_value)[0]
print("Most frequent value in x",most_freq_value)
print("Indices",indices)

gfg=np.matrix('[4,1,9;12,3,1;4,5,6]')
total_sum=gfg.sum()
print("Total sum:",total_sum)
row_sum=gfg.sum(axis=1)
print("ROW-WISE SUM:\n",row_sum)
column_sum=gfg.sum(axis=0)
print("column-wise sum:\n",column_sum)

gfg=np.matrix('[4,1,9;12,3,1;4,5,6]')
total_sum=gfg.sum()
print("Total sum:",total_sum)
row_sum=gfg.sum(axis=1)
print("ROW-WISE SUM:\n",row_sum)
column_sum=gfg.sum(axis=0)
print("column-wise sum:\n",column_sum)
